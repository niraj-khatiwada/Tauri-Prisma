[package]
name = "app"
version = "1.0.0"
description = ""
authors = ["you"]
default-run = "app"
edition = "2021"
rust-version = "1.62"


[lib]
name = "lib"
path = "src/lib/mod.rs"
crate-type = ["lib", "staticlib", "cdylib"]

[build-dependencies]
tauri-build = { version = "2.0.0-beta", features = [] }

[dependencies]
serde_json = "1.0"
serde = { version = "1.0", features = ["derive"] }
tauri = { version = "2.0.0-beta.19", features = ["protocol-asset"] }
tokio = { version = "1.34.0", features = [
    "rt",
    "rt-multi-thread",
    "macros",
    "process",
] }
log = "0.4.21"
crossbeam-channel = "0.5.12"
strum = { version = "0.26.2", features = ["derive"] }
tauri-plugin-log = "2.0.0-beta"
tauri-plugin-window-state = "2.0.0-beta"
rspc = "0.2.0"
specta = "=2.0.0-rc.12"
prisma-client-rust = { git = "https://github.com/Brendonovich/prisma-client-rust", tag = "0.6.11", default-features = false, features = [
    "sqlite",
    "migrations",
    "mocking",
    "specta",

] }
tauri-specta = { version = "=2.0.0-rc.10", features = [
    "javascript",
    "typescript",
] }

[features]
# this feature is used for production builds or when `devPath` points to the filesystem and the built-in dev server is disabled.
# If you use cargo directly instead of tauri's cli you can use this feature flag to switch between tauri's `dev` and `build` modes.
# DO NOT REMOVE!!z
custom-protocol = ["tauri/custom-protocol"]

[workspace]
members = ["prisma-cli"]
